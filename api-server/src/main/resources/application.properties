# Describes general internal Quarkus configuration.
quarkus.http.cors=false
quarkus.http.auth.proactive=false
quarkus.smallrye-health.ui.always-include=true
quarkus.swagger-ui.always-include=true
quarkus.native.builder-image=graalvm
quarkus.banner.path=banner.txt

# Describes security Quarkus configuration.
quarkus.rest-client.alpn=false

# Describes database Quarkus configuration.
quarkus.datasource.jdbc.driver=org.sqlite.JDBC
quarkus.datasource.db-kind=other
quarkus.datasource.jdbc.url=jdbc:sqlite:${user.home}/.objectstorage/internal/database/data.db
quarkus.datasource.username=objectstorage_user
quarkus.datasource.password=objectstorage_password

# Describes LiquiBase Quarkus configuration.
quarkus.liquibase.change-log=liquibase/config.yaml
quarkus.liquibase.migrate-at-start=true

# Describes internal healthcheck client configuration.
quarkus.rest-client.small-rye-health-check.url=http://${quarkus.http.host}:${quarkus.http.port}

# Describes notation used for content root definition validation.
content.root.notation=^/?([a-zA-Z0-9_.-]+(\\/[-a-zA-Z0-9_.]+)*)?/?$

# Describes general user principle claim for jwt token.
secrets.jwt.upn=objectstorage

# Describes internal secrets validation jwt token existence time limit.
secrets.jwt.ttl=60000

# Describes name used for secrets data in the jwt claims.
secrets.jwt.claims.name=data

# Describes notation used for jwt header.
secrets.jwt.header.notation=Bearer: ([0-9a-zA-Z\.\_\-]*)

# Describes database config table name.
database.tables.config.name=config

# Describes database content table name.
database.tables.content.name=content

# Describes database temporate table name.
database.tables.temporate.name=temporate

# Describes database provider table name.
database.tables.provider.name=provider

# Describes database secrets table name.
database.tables.secret.name=secret

# Describes database statement close delay duration.
database.statement.close-delay=10000

# Describes amount of symbols used for transaction savepoint creation.
database.transaction.savepoint.symbols.count=32

# Describes git configuration properties file.
git.config.location=git.properties

# Describes location of application configuration file.
config.location=${user.home}/.objectstorage/config/api-server.yaml

# Describes location of local workspace.
workspace.directory=${user.home}/.objectstorage/workspace

# Describes location of object content directory.
workspace.content.object.directory=object

# Describes location of backup content directory.
workspace.content.backup.directory=backup

# Describes location of backup content unit.
workspace.content.backup.unit=backup

# Describes name of the file used for compression operation.
workspace.compression.file.name=objectstorage-file

# Describes diagnostics data scraping delay duration.
diagnostics.scrape.delay=1000

# Describes name of the Docker network used to install diagnostics infrastructure.
diagnostics.common.docker.network.name=objectstorage-api-server

# Describes location of Grafana configuration files.
diagnostics.grafana.config.location=${user.home}/.objectstorage/diagnostics/grafana/config

# Describes location of Grafana datasources configuration files.
diagnostics.grafana.datasources.location=${user.home}/.objectstorage/diagnostics/grafana/config/datasources

# Describes name of Grafana configuration template file.
diagnostics.grafana.datasources.template=datasource.tmpl

# Describes name of Grafana configuration template processing output file.
diagnostics.grafana.datasources.output=datasource.yml

# Describes location of Grafana dashboards configuration files.
diagnostics.grafana.dashboards.location=${user.home}/.objectstorage/diagnostics/grafana/config/dashboards

# Describes location of Grafana diagnostics dashboards configuration files.
diagnostics.grafana.dashboards.diagnostics.template=diagnostics.tmpl

# Describes location of Grafana diagnostics dashboards configuration files.
diagnostics.grafana.dashboards.diagnostics.output=diagnostics.json

# Describes location of Grafana internal files.
diagnostics.grafana.internal.location=${user.home}/.objectstorage/diagnostics/grafana/internal

# Describes name of the Docker container used for Grafana instance deployment.
diagnostics.grafana.docker.name=objectstorage-diagnostics-grafana

# Describes image name of the Docker container used for Grafana instance deployment.
diagnostics.grafana.docker.image=grafana/grafana

# Describes location of Prometheus configuration files.
diagnostics.prometheus.config.location=${user.home}/.objectstorage/diagnostics/prometheus/config

# Describes name of Prometheus configuration template file.
diagnostics.prometheus.config.template=prometheus.tmpl

# Describes name of Prometheus configuration template processing output file.
diagnostics.prometheus.config.output=prometheus.yml

# Describes location of Prometheus internal files.
diagnostics.prometheus.internal.location=${user.home}/.objectstorage/diagnostics/prometheus/internal

# Describes name of the Docker container used for Prometheus instance deployment.
diagnostics.prometheus.docker.name=objectstorage-diagnostics-prometheus

# Describes image name of the Docker container used for Prometheus instance deployment.
diagnostics.prometheus.docker.image=prom/prometheus:v2.36.2

# Describes name of the Docker container used for Prometheus Node Exporter instance deployment.
diagnostics.prometheus.node-exporter.docker.name=objectstorage-diagnostics-prometheus-node-exporter

# Describes image name of the Docker container used for Prometheus Node Exporter instance deployment.
diagnostics.prometheus.node-exporter.docker.image=quay.io/prometheus/node-exporter:latest

# Describes connection timeout used by metrics service.
diagnostics.metrics.connection.timeout=3000